{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template deploys WordPress into an existing VPC. **WARNING** This template creates EC2 instances and related resources. You will be billed for the AWS resources used if you create a stack from this template. (qs-1ot302h7c)",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Network Configuration"
                    },
                    "Parameters": [
                        "VPCID",
                        "VPCCIDR",
                        "PrivateSubnet1ID",
                        "PrivateSubnet2ID",
                        "PublicSubnet1ID",
                        "PublicSubnet2ID",
                        "ALBAccessCIDR"
                    ]
                },
                {
                    "Label": {
                        "default": "Aurora Database Configuration"
                    },
                    "Parameters": [
                        "DBAutoMinorVersionUpgrade",
                        "DBBackupRetentionPeriod",
                        "DBPreferredBackupWindow",
                        "DBInstanceClass",
                        "DBMasterUserPassword",
                        "DBMultiAZ"
                    ]
                },
                {
                    "Label": {
                        "default": "DNS and SSL Configuration"
                    },
                    "Parameters": [
                        "DomainName",
                        "CertificateArn",
                        "HostedZoneID"
                    ]
                },
                {
                    "Label": {
                        "default": "WordPress Webserver Configuration"
                    },
                    "Parameters": [
                        "WordpressAdminPassword",
                        "WebServerInstanceType",
                        "WebServerAMI",
                        "WebServerInstanceMonitoring",
                        "KeyPairName",
                        "WebServerMinSize",
                        "WebServerMaxSize",
                        "WebServerDesiredCapacity",
                        "AutoScalingNotificationEmail"
                    ]
                },
                {
                    "Label": {
                        "default": "ElastiCache Configuration"
                    },
                    "Parameters": [
                        "ElastiCacheEnable",
                        "ElastiCacheAutoMinorVersionUpgrade",
                        "ElastiCacheNodeType",
                        "ElastiCacheNumberOfNodes"
                    ]
                },
                {
                    "Label": {
                        "default": "AWS Quick Start Configuration"
                    },
                    "Parameters": [
                        "QSS3BucketName",
                        "QSS3KeyPrefix"
                    ]
                }
            ],
            "ParameterLabels": {
                "AutoScalingNotificationEmail": {
                    "default": "Autoscaling Notification Email"
                },
                "DBAutoMinorVersionUpgrade": {
                    "default": "Enable Auto Minor Version Upgrade"
                },
                "DBBackupRetentionPeriod": {
                    "default": "Backup Retention Period"
                },
                "DBPreferredBackupWindow": {
                    "default": "Preferred Backup Window"
                },
                "DBInstanceClass": {
                    "default": "Database Instance Size"
                },
                "DBMasterUserPassword": {
                    "default": "Database Admin Password"
                },
                "DBMultiAZ": {
                    "default": "Multi-AZ Database"
                },
                "WordpressAdminPassword": {
                    "default": "Admin Password"
                },
                "KeyPairName": {
                    "default": "SSH Keypair Name"
                },
                "PrivateSubnet1ID": {
                    "default": "Private Subnet-1 ID"
                },
                "PrivateSubnet2ID": {
                    "default": "Private Subnet-2 ID"
                },
                "PublicSubnet1ID": {
                    "default": "Public Subnet-1 ID"
                },
                "PublicSubnet2ID": {
                    "default": "Public Subnet-2 ID"
                },
                "ALBAccessCIDR": {
                    "default": "Allowed CIDR for ALB Access"
                },
                "QSS3BucketName": {
                    "default": "Quick Start S3 Bucket Name"
                },
                "QSS3KeyPrefix": {
                    "default": "Quick Start S3 Key Prefix"
                },
                "DomainName": {
                    "default": "Domain Name"
                },
                "CertificateArn": {
                    "default": "SSL certificate ARN"
                },
                "HostedZoneID": {
                    "default": "Route 53 Hosted Zone ID"
                },
                "VPCCIDR": {
                    "default": "VPC CIDR"
                },
                "VPCID": {
                    "default": "VPC ID"
                },
                "WebServerDesiredCapacity": {
                    "default": "Desired Number of Instances"
                },
                "WebServerInstanceType": {
                    "default": "Instance Size"
                },
                "WebServerAMI": {
                    "default": "AMI to use for WordPress Instances"
                },
                "WebServerInstanceMonitoring": {
                    "default": "Instance enhanced monitoring"
                },
                "WebServerMaxSize": {
                    "default": "Max Number of Instances"
                },
                "WebServerMinSize": {
                    "default": "Min Number of Instances"
                },
                "ElastiCacheEnable":{
                    "default": "Enable ElastiCache"
                },
                "ElastiCacheAutoMinorVersionUpgrade":{
                    "default": "Enable ElastiCache Auto Minor Version Upgrade"
                },
                "ElastiCacheNodeType":{
                    "default": "ElastiCache Node Type"
                },
                "ElastiCacheNumberOfNodes":{
                    "default": "Number of ElastiCache Nodes"
                }
            }
        }
    },
    "Parameters": {
        "AutoScalingNotificationEmail": {
            "AllowedPattern": "([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)",
            "ConstraintDescription": "Must be a valid email address.",
            "Description": "Email address to notify any scaling operation. When an Autoscaling event occurs, an email is sent to this mail address.",
            "Type": "String",
            "Default": "trietlu@amazon.com"
        },
        "DBAutoMinorVersionUpgrade": {
            "AllowedValues": [
                "true",
                "false"
            ],
            "Default": "true",
            "Description": "Select true/false to setup Auto Minor Version Upgrades. When enabled, it allows the database engine to be automatically upgraded when a new minor version is available.",
            "Type": "String"
        },
        "DBBackupRetentionPeriod": {
            "ConstraintDescription": "Database backup retention period must be between 1 and 35 days",
            "Default": "7",
            "Description": "The number of days for which automatic DB snapshots are retained, 7 by default. You can set this parameter to a value between 1 and 35 days. Set this parameter to 0 to disable automated backups.",
            "MaxValue": "35",
            "MinValue": "1",
            "Type": "Number"
        },
        "DBPreferredBackupWindow": {
            "AllowedPattern": "^(|([0-1][0-9]|2[0-3]):[0-5][0-9]-([0-1][0-9]|2[0-3]):[0-5][0-9])$",
            "ConstraintDescription": "Preferred backup window must be left blank or in the form of HH:MM-HH:MM",
            "Default": "",
            "Description": "(Optional) Preferred Backup Window, specified in the format HH:MM-HH:MM using UTC. Automated backups will occur within this time frame. When it's not set, the backup will take place during the default Backup Windows of the AWS region.",
            "Type": "String"
        },
        "DBInstanceClass": {
            "AllowedValues": [
                "db.t2.micro",
                "db.t2.small",
                "db.t2.medium",
                "db.t2.large",
                "db.t2.xlarge",
                "db.t2.2xlarge",
                "db.m3.medium",
                "db.m3.large",
                "db.m3.xlarge",
                "db.m3.2xlarge",
                "db.m4.large",
                "db.m4.xlarge",
                "db.m4.2xlarge",
                "db.m4.4xlarge",
                "db.m4.10xlarge",
                "db.m4.16xlarge",
                "db.r3.large",
                "db.r3.xlarge",
                "db.r3.2xlarge",
                "db.r3.4xlarge",
                "db.r3.8xlarge",
                "db.r4.large",
                "db.r4.xlarge",
                "db.r4.2xlarge",
                "db.r4.4xlarge",
                "db.r4.8xlarge",
                "db.r4.16xlarge"
            ],
            "ConstraintDescription": "Must select a valid database instance type.",
            "Default": "db.t2.small",
            "Description": "Select instance size (compute and memory capacity) for Aurora DB instances.",
            "Type": "String"
        },
        "DBMasterUserPassword": {
            "AllowedPattern": "(?=\\S)[^@/\"\\r\\n\\t\\f\\s]*",
            "ConstraintDescription": "Min 8 alphanumeric. Cannot contain white space, @, /, \"",
            "Description": "8-41 character, alphanumeric string to be used as the database admin account password (database admin username is 'root').",
            "MaxLength": "41",
            "MinLength": "8",
            "NoEcho": "True",
            "Type": "String",
            "Default": "manage123"
        },
        "DBMultiAZ": {
            "AllowedValues": [
                "true",
                "false"
            ],
            "Default": "true",
            "Description": "Select true/false to configure database as a Multi-AZ deployment or not. Multi-AZ deployments create a database node in each of the Availability Zones providing HA.",
            "Type": "String"
        },
        "WordpressAdminPassword": {
            "AllowedPattern": "[a-zA-Z0-9]*",
            "ConstraintDescription": "Must contain only alphanumeric characters and must be between 8 and 41 characters long.",
            "Description": "8-41 character, alphanumeric string to be used as the WordPress site admin account password (admin username is 'user').",
            "MaxLength": "41",
            "MinLength": "8",
            "NoEcho": "true",
            "Type": "String",
            "Default": "manage123"
        },
        "KeyPairName": {
            "ConstraintDescription": "Must be the name of an existing EC2 KeyPair.",
            "Description": "The name of an existing public/private key pair, which allows you to securely connect to your instance after it launches. Use 'ec2-user' as SSH username for the connection to the Bastion hosts, then use 'bitnami' as SSH username for the connection to the WordPress instances.",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "Default":"trietlu"
        },
        "PrivateSubnet1ID": {
            "Description": "The ID of the private subnet in Availability Zone 1 in your existing VPC (e.g., subnet-p12345pp1).",
            "Type": "AWS::EC2::Subnet::Id",
            "Default":"subnet-064193a73e23d1ac8"
        },
        "PrivateSubnet2ID": {
            "Description": "The ID of the private subnet in Availability Zone 2 in your existing VPC (e.g., subnet-p12345pp2).",
            "Type": "AWS::EC2::Subnet::Id",
            "Default": "subnet-0d20d44aecb3630f2"
        },
        "PublicSubnet1ID": {
            "Description": "The ID of the public (DMZ) subnet in Availability Zone 1 in your existing VPC (e.g., subnet-a12345aa1).",
            "Type": "AWS::EC2::Subnet::Id",
            "Default":"subnet-0cf1615b2bd26b9a0"
        },
        "PublicSubnet2ID": {
            "Description": "The ID of the public (DMZ) subnet in Availability Zone 2 in your existing VPC (e.g., subnet-a12345aa2).",
            "Type": "AWS::EC2::Subnet::Id",
            "Default":"subnet-077db5d39e3c9ee20"
        },
        "ALBAccessCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/x",
            "Default": "0.0.0.0/0",
            "Description": "Allowed CIDR block for external web access to the Application Load Balancer. It defines the block of IPs that can access the Load Balancer and, consequently, the WordPress site. Set it to 0.0.0.0/0 to make it accessible from anywhere.",
            "Type": "String"
        },
        "QSS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "S3 bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Default": "trietlu-config",
            "Description": "Alphanumeric string which identifies the S3 bucket name for the Quick Start assets. It's the bucket to store the copy of the Quick Start assets if you decided to customize or extend them for your own use.",
            "Type": "String"
        },
        "QSS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-/._]*$",
            "ConstraintDescription": "S3 key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Default": "quickstart-bitnami-wordpress/",
            "Description": "Alphanumeric string which identifies the S3 key prefix used to simulate a folder for your copy of the Quick Start assets if you decided to customize or extend them for your own use.",
            "Type": "String"
        },
        "DomainName": {
            "Description": "(Optional) Domain name for the web site. It must be an existing, publicly resolvable domain.",
            "Type": "String",
            "Default": "",
            "AllowedPattern": "^((\\w+\\.)+\\w+){0,1}$",
            "ConstraintDescription": "Must be a valid domain name."
        },
        "CertificateArn": {
            "Description": "(Optional) The ARN of the SSL certificate to use for the load balancer.",
            "Type": "String",
            "Default": ""
        },
        "HostedZoneID": {
            "Description": "(Optional) Route 53 Hosted Zone ID of the domain name. When it's left blank Route 53 will not be configured and DNS must be setup manually. When setting an ID, you must also specify a Domain name.",
            "Type": "String",
            "Default": "",
            "MaxLength": "32"
        },
        "VPCCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "Must be a valid IP range in x.x.x.x/x notation",
            "Description": "CIDR block for the VPC. All the subnets and resources will have an IP within this address block.",
            "Type": "String",
            "Default":"10.0.0.0/16"
        },
        "VPCID": {
            "Description": "The ID of your existing VPC (e.g. vpc-123456789)",
            "Type": "AWS::EC2::VPC::Id",
            "Default":"vpc-04f57e24275de9caf"
        },
        "WebServerAMI": {
            "Default": "",
            "Description": "(Optional) Select AMI to use for the WordPress instances. When it's left blank, the default WordPress AMI for your AWS region will be used. When setting an AMI, it must be available in your current region.",
            "AllowedPattern": "^(ami-([a-zA-Z0-9]{8,})){0,1}$",
            "ConstraintDescription": "Must be a valid AMI.",
            "Type": "String"
        },
        "WebServerDesiredCapacity": {
            "Default": "1",
            "Description": "Desired number of WordPress instances. This will set the number of instances when the scaling group is created, then the autoscaler will increase or decrease the current number of instances as the scaling events occur.",
            "Type": "Number"
        },
        "WebServerInstanceType": {
            "AllowedValues": [
                "a1.medium",
                "a1.large",
                "a1.xlarge",
                "a1.2xlarge",
                "a1.4xlarge",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "t2.xlarge",
                "t2.2xlarge",
                "t3.micro",
                "t3.small",
                "t3.medium",
                "t3.large",
                "t3.xlarge",
                "t3.2xlarge",
                "t3a.micro",
                "t3a.small",
                "t3a.medium",
                "t3a.large",
                "t3a.xlarge",
                "t3a.2xlarge",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "m4.10xlarge",
                "m4.16xlarge",
                "m5.large",
                "m5.xlarge",
                "m5.2xlarge",
                "m5.4xlarge",
                "m5.12xlarge",
                "m5.24xlarge",
                "m5.metal",
                "m5a.large",
                "m5a.xlarge",
                "m5a.2xlarge",
                "m5a.4xlarge",
                "m5a.12xlarge",
                "m5a.24xlarge",
                "m5ad.large",
                "m5ad.xlarge",
                "m5ad.2xlarge",
                "m5ad.4xlarge",
                "m5ad.12xlarge",
                "m5ad.24xlarge",
                "m5d.large",
                "m5d.xlarge",
                "m5d.2xlarge",
                "m5d.4xlarge",
                "m5d.12xlarge",
                "m5d.24xlarge",
                "m5d.metal",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "c5.large",
                "c5.xlarge",
                "c5.2xlarge",
                "c5.4xlarge",
                "c5.9xlarge",
                "c5.18xlarge",
                "c5d.large",
                "c5d.xlarge",
                "c5d.2xlarge",
                "c5d.4xlarge",
                "c5d.9xlarge",
                "c5d.18xlarge",
                "c5n.large",
                "c5n.xlarge",
                "c5n.2xlarge",
                "c5n.4xlarge",
                "c5n.9xlarge",
                "c5n.18xlarge",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge",
                "r4.large",
                "r4.xlarge",
                "r4.2xlarge",
                "r4.4xlarge",
                "r4.8xlarge",
                "r4.16xlarge",
                "r5.large",
                "r5.xlarge",
                "r5.2xlarge",
                "r5.4xlarge",
                "r5.12xlarge",
                "r5.24xlarge",
                "r5.metal",
                "r5a.large",
                "r5a.xlarge",
                "r5a.2xlarge",
                "r5a.4xlarge",
                "r5a.12xlarge",
                "r5a.24xlarge",
                "r5ad.large",
                "r5ad.xlarge",
                "r5ad.2xlarge",
                "r5ad.4xlarge",
                "r5ad.12xlarge",
                "r5ad.24xlarge",
                "r5d.large",
                "r5d.xlarge",
                "r5d.2xlarge",
                "r5d.4xlarge",
                "r5d.12xlarge",
                "r5d.24xlarge",
                "r5d.metal",
                "i2.xlarge",
                "i2.2xlarge",
                "i2.4xlarge",
                "i2.8xlarge",
                "i3.large",
                "i3.xlarge",
                "i3.2xlarge",
                "i3.4xlarge",
                "i3.8xlarge",
                "i3.16xlarge",
                "x1.16xlarge",
                "x1.32xlarge",
                "x1e.xlarge",
                "x1e.2xlarge",
                "x1e.4xlarge",
                "x1e.8xlarge",
                "x1e.16xlarge",
                "x1e.32xlarge",
                "z1d.large",
                "z1d.xlarge",
                "z1d.2xlarge",
                "z1d.3xlarge",
                "z1d.6xlarge",
                "z1d.12xlarge",
                "z1d.metal"
            ],
            "ConstraintDescription": "Choose an instance type.",
            "Default": "t2.small",
            "Description": "Select Amazon EC2 instance type for the WordPress instances.",
            "Type": "String"
        },
        "WebServerInstanceMonitoring": {
            "Description": "Set enhanced monitoring for WordPress instances. When enabled, EC2 console displays monitoring graphs with a 1-minute resolution, if not it will be 5-minute resolution.",
            "Type": "String",
            "Default": "Enabled",
            "AllowedValues": [
                "Enabled",
                "Disabled"
            ]
        },
        "WebServerMaxSize": {
            "Default": "4",
            "Description": "Maximum number of WordPress EC2 instances in the Auto Scaling group. It specifies the maximum number of replicas when scaling up.",
            "Type": "Number"
        },
        "WebServerMinSize": {
            "Default": "1",
            "Description": "Minimum number of WordPress EC2 instances in the Auto Scaling group. It specifies the minimum number of replicas when scaling down.",
            "Type": "Number"
        },
        "ElastiCacheEnable": {
            "AllowedValues": [
                "true",
                "false"
            ],
            "Default": "true",
            "Description": "Select true/false to create a ElastiCache cluster for Memcached. This technology caches frequently used objects. Using the W3TC plugin, it can be used to reduce the number of queries done to Aurora database, the rendered HTML pages and internal objets, hence improving the WordPress site performance.",
            "Type": "String"
        },
        "ElastiCacheAutoMinorVersionUpgrade":{
            "AllowedValues": [
                "true",
                "false"
            ],
            "Default": "true",
            "Description": "Select true/false to setup Auto Minor Version Upgrades. When enabled, it allows the Memcached engine to be automatically upgraded when a new minor version is available.",
            "Type": "String"
        },
        "ElastiCacheNodeType": {
            "AllowedValues": [
                "cache.t2.micro",
                "cache.t2.small",
                "cache.t2.medium",
                "cache.m3.medium",
                "cache.m3.large",
                "cache.m3.xlarge",
                "cache.m3.2xlarge",
                "cache.m4.large",
                "cache.m4.xlarge",
                "cache.m4.2xlarge",
                "cache.m4.4xlarge",
                "cache.m4.10xlarge",
                "cache.r3.large",
                "cache.r3.xlarge",
                "cache.r3.2xlarge",
                "cache.r3.4xlarge",
                "cache.r3.8xlarge",
                "cache.r4.large",
                "cache.r4.xlarge",
                "cache.r4.2xlarge",
                "cache.r4.4xlarge",
                "cache.r4.8xlarge",
                "cache.r4.16xlarge"
            ],
            "ConstraintDescription": "Must select a valid ElastiCache node type.",
            "Default": "cache.t2.micro",
            "Description": "Select node type (compute and memory capacity) for nodes in the ElastiCache cluster.",
            "Type": "String"
        },
        "ElastiCacheNumberOfNodes": {
            "Default": "2",
            "MinValue": "1",
            "MaxValue": "20",
            "Description": "The number of nodes the ElastiCache cluster should have. Increase the number of nodes to guarantee better performance and HA.",
            "Type": "Number"
        }
    },
    "Rules": {
        "DomainNameIsPresentIfHostedZoneIDRule": {
            "Assertions": [
                {
                    "Assert": {
                        "Fn::Or": [
                          { "Fn::Equals" : [ { "Ref" : "HostedZoneID" }, "" ] },
                          { "Fn::Not": [ { "Fn::Equals" : [ { "Ref" : "DomainName" }, "" ] } ] } ]
                    },
                    "AssertDescription": "Please specify a 'Domain Name' if you specify 'Route 53 Hosted Zone ID'"
                }
            ]
        },
        "EFSSupportedRegionRule": {
            "Assertions": [
                {
                    "Assert": {
                        "Fn::Contains": [
                            [
                                "us-east-1",
                                "us-east-2",
                                "us-west-1",
                                "us-west-2",
                                "eu-central-1",
                                "eu-west-1",
                                "eu-west-2",
                                "ap-northeast-1",
                                "ap-northeast-2",
                                "ap-southeast-1",
                                "ap-southeast-2"
                            ],
                            {
                                "Ref": "AWS::Region"
                            }
                        ]
                    },
                    "AssertDescription": "This Quick Start uses Amazon EFS which is only available in the US East (N. Virginia), US East (Ohio), US West (N. California), US West (Oregon), EU (Frankfurt), EU (Ireland), EU (London), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore) and Asia Pacific (Sydney) regions. Please launch the stack in one of these regions"
                }
            ]
        }
    },
    "Conditions": {
        "AddDNSRecord": {
            "Fn::And": [
                { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "DomainName" }, "" ] } ] },
                { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "HostedZoneID" }, "" ] } ] }
            ]
        },
        "ElastiCacheEnableCondition": {
            "Fn::Equals": [
                {
                    "Ref": "ElastiCacheEnable"
                },
                "true"
            ]
        }
    },
    "Resources": {
        "SecurityGroupsStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/securitygroups.template"
                },
                "Parameters": {
                    "VPC": {
                        "Ref": "VPCID"
                    },
                    "VPCCIDR": {
                        "Ref": "VPCCIDR"
                    },
                    "ALBAccessCIDR": {
                        "Ref": "ALBAccessCIDR"
                    }
                }
            }
        },
        "RDSAuroraStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/rdsaurora.template"
                },
                "Parameters": {
                    "Subnets": {
                        "Fn::Join": [
                            ",",
                            [
                                {
                                    "Ref": "PrivateSubnet1ID"
                                },
                                {
                                    "Ref": "PrivateSubnet2ID"
                                }
                            ]
                        ]
                    },
                    "AuroraRDSSecurityGroup": {
                        "Fn::GetAtt": [
                            "SecurityGroupsStack",
                            "Outputs.AuroraRDSSecurityGroup"
                        ]
                    },
                    "DBAutoMinorVersionUpgrade": {
                        "Ref": "DBAutoMinorVersionUpgrade"
                    },
                    "DBBackupRetentionPeriod": {
                        "Ref": "DBBackupRetentionPeriod"
                    },
                    "DBPreferredBackupWindow": {
                        "Ref": "DBPreferredBackupWindow"
                    },
                    "DBInstanceClass": {
                        "Ref": "DBInstanceClass"
                    },
                    "DBMasterUserPassword": {
                        "Ref": "DBMasterUserPassword"
                    },
                    "DBMultiAZ": {
                        "Ref": "DBMultiAZ"
                    }
                }
            }
        },
        "ElastiCacheStack":{
            "Type": "AWS::CloudFormation::Stack",
            "Condition": "ElastiCacheEnableCondition",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/elasticache.template"
                },
                "Parameters":{
                    "Subnets": {
                        "Fn::Join": [
                            ",",
                            [
                                {
                                    "Ref": "PrivateSubnet1ID"
                                },
                                {
                                    "Ref": "PrivateSubnet2ID"
                                }
                            ]
                        ]
                    },
                    "ElastiCacheSecurityGroup":{
                        "Fn::GetAtt": [
                            "SecurityGroupsStack",
                            "Outputs.ElastiCacheSecurityGroup"
                        ]
                    },
                    "AutoMinorVersionUpgrade":{
                        "Ref": "ElastiCacheAutoMinorVersionUpgrade"
                    },
                    "NodeType":{
                        "Ref": "ElastiCacheNodeType"
                    },
                    "NumberOfNode":{
                        "Ref": "ElastiCacheNumberOfNodes"
                    }
                }
            }
        },
        "WebserverStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/webserver.template"
                },
                "Parameters": {
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Ref": "QSS3KeyPrefix"
                    },
                    "AutoScalingNotificationEmail": {
                        "Ref": "AutoScalingNotificationEmail"
                    },
                    "WebServerSubnets": {
                        "Fn::Join": [
                            ",",
                            [
                                {
                                    "Ref": "PrivateSubnet1ID"
                                },
                                {
                                    "Ref": "PrivateSubnet2ID"
                                }
                            ]
                        ]
                    },
                    "EFSSecurityGroup": {
                        "Fn::GetAtt": [
                            "SecurityGroupsStack",
                            "Outputs.EFSSecurityGroup"
                        ]
                    },
                    "WebServerInstanceType": {
                        "Ref": "WebServerInstanceType"
                    },
                    "WebServerAMI": {
                        "Ref": "WebServerAMI"
                    },
                    "WebServerSecurityGroup": {
                        "Fn::GetAtt": [
                            "SecurityGroupsStack",
                            "Outputs.WebServerSecurityGroup"
                        ]
                    },
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "ElastiCacheEndpointAddress": {
                        "Fn::If":[
                            "ElastiCacheEnableCondition",
                            {
                                "Fn::GetAtt": [
                                    "ElastiCacheStack",
                                    "Outputs.ElastiCacheClusterEndPoint"
                                ]
                            },
                            ""
                        ]
                    },
                    "DBEndpointAddress": {
                        "Fn::GetAtt": [
                            "RDSAuroraStack",
                            "Outputs.AuroraEndPointAddress"
                        ]
                    },
                    "DBMasterUserPassword": {
                        "Ref": "DBMasterUserPassword"
                    },
                    "WordpressAdminPassword": {
                        "Ref": "WordpressAdminPassword"
                    },
                    "WebServerMinSize": {
                        "Ref": "WebServerMinSize"
                    },
                    "WebServerMaxSize": {
                        "Ref": "WebServerMaxSize"
                    },
                    "WebServerInstanceMonitoring": {
                        "Ref": "WebServerInstanceMonitoring"
                    },
                    "WebServerDesiredCapacity": {
                        "Ref": "WebServerDesiredCapacity"
                    },
                    "PublicSubnet1ID": {
                        "Ref": "PublicSubnet1ID"
                    },
                    "PublicSubnet2ID": {
                        "Ref": "PublicSubnet2ID"
                    },
                    "VPCID": {
                        "Ref": "VPCID"
                    },
                    "ALBSecurityGroup": {
                        "Fn::GetAtt": [
                            "SecurityGroupsStack",
                            "Outputs.ALBSecurityGroup"
                        ]
                    },
                    "DomainName": {
                        "Ref": "DomainName"
                    },
                    "CertificateArn": {
                        "Ref": "CertificateArn"
                    },
                    "HostedZoneID": {
                        "Ref": "HostedZoneID"
                    },
                    "ElastiCacheEnable": {
                        "Ref": "ElastiCacheEnable"
                    },
                    "ElastiCacheClusterId": {
                        "Fn::If":[
                            "ElastiCacheEnableCondition",
                            {"Fn::GetAtt": ["ElastiCacheStack", "Outputs.ElastiCacheClusterId"]},
                            ""
                        ]
                    }
                }
            }
        }
    },
    "Outputs": {
        "APPURL": {
            "Condition": "AddDNSRecord",
            "Description": "The URL to access the web application",
            "Value": { "Fn::GetAtt": [ "WebserverStack", "Outputs.APPURL" ] }
        },
        "ELBURL": {
            "Description": "The URL of the ELB. Point your domain to it by using a CNAME/ALIAS DNS record",
            "Value": { "Fn::GetAtt": [ "WebserverStack", "Outputs.ELBURL" ] }
        },
        "DBENDPOINT": {
            "Description": "The URL of the database",
            "Value": { "Fn::GetAtt": [ "RDSAuroraStack", "Outputs.AuroraEndPointAddress" ] }
        },
        "CFURL": {
            "Description": "The URL of the CF Distribution",
            "Value": { "Fn::GetAtt": [ "WebserverStack", "Outputs.CFURL" ] }
        },
        "ASGNAME": {
            "Description": "The Name of the ASG",
            "Value" : { "Fn::GetAtt": [ "WebserverStack", "Outputs.ASGNAME" ] }
        }

    }
}
